import pygame
import math
import time
pygame.init()
#### Hier stehen Funktionen und Klassen

def main():
    run = True
    # Player
    player1 = pygame.Rect(WIDTH/2, HEIGHT/2, PLAYER_HEIGHT, PLAYER_WIDTH)
    player1_img = pygame.image.load("wizard.png")
    player1_img = pygame.transform.scale(player1_img ,(PLAYER_WIDTH, PLAYER_HEIGHT))
    facing = "N"
    facing_while_shot = facing
    # Clock
    clock = pygame.time.Clock()
    # Abilities
    time_shot_ability1 = -1
    ability1 = pygame.Rect(0,0,0,0)
    ability1_state = "ready"
    ability1_list = [ability1]
    
    while run:
        clock.tick(60)
        #print(int(time.time()))
        keys = pygame.key.get_pressed()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
                break
        
        player_movement(player1, keys)
        
        if keys[pygame.K_w] or keys[pygame.K_a] or keys[pygame.K_s] or keys[pygame.K_d]:
            facing = facing_direction(keys)
        # Ablility 1
        if keys[pygame.K_h] and ability1_state == "ready":
            ability1_state = "cooldown"
            facing_while_shot = facing
            ability1 = player_ability1_rect(player1, keys, facing_while_shot)
            ability1_list.append(ability1)
            time_shot_ability1 = int(time.time())
            print("TSB1: ", time_shot_ability1)
        ability1_movement(facing_while_shot, ability1)
        if int(time_shot_ability1) + 2 == int(time.time()):
            ability1_state = "ready"
            print("lol")
            # Bug: If wird eine Sekuden gehalten da TSA1 + 2 fÃ¼r 1 sek == int(t.t())
        
        
        draw(player1, player1_img, ability1_list)
    pygame.quit()

def player_movement(player1, keys):
    if keys[pygame.K_a] and  player1.x - PLAYER_VELOCITY >= 0:
        player1.x -= PLAYER_VELOCITY
    if keys[pygame.K_d] and  player1.x + PLAYER_VELOCITY + PLAYER_WIDTH <= WIDTH:
        player1.x += PLAYER_VELOCITY
    if keys[pygame.K_w] and player1.y - PLAYER_VELOCITY >= 0:
        player1.y -= PLAYER_VELOCITY
    if keys[pygame.K_s]and player1.y + PLAYER_VELOCITY + PLAYER_HEIGHT <= HEIGHT:
        player1.y += PLAYER_VELOCITY

def facing_direction(keys):
    """if keys[pygame.K_a] and keys[pygame.K_w]:
        return "NW"
    elif keys[pygame.K_a] and keys[pygame.K_s]:
        return "SW"
    elif keys[pygame.K_d] and keys[pygame.K_s]:
        return "SO"
    elif keys[pygame.K_d] and keys[pygame.K_w]:
        return "NO"""
    if keys[pygame.K_a]:
        return "W"
    elif keys[pygame.K_d]:
        return "O"
    elif keys[pygame.K_w]:
        return "N"
    elif keys[pygame.K_s]:
        return "S"

def player_ability1_rect(player1, keys, facing_while_shot):
    if facing_while_shot == "N":
        hitbox = pygame.Rect(player1.x - PLAYER_WIDTH, player1.y, PLAYER_WIDTH * 3, PLAYER_HEIGHT)
        return hitbox
    if facing_while_shot == "O":
        hitbox = pygame.Rect(player1.x, player1.y - PLAYER_HEIGHT, PLAYER_WIDTH, PLAYER_HEIGHT * 3)
        return hitbox
    if facing_while_shot == "S":
        hitbox = pygame.Rect(player1.x - PLAYER_WIDTH, player1.y, PLAYER_WIDTH * 3, PLAYER_HEIGHT)
        return hitbox
    if facing_while_shot == "W":
        hitbox = pygame.Rect(player1.x, player1.y - PLAYER_HEIGHT, PLAYER_WIDTH, PLAYER_HEIGHT * 3)
        return hitbox
    """"
    ability1_surf = pygame.Surface((PLAYER_WIDTH * 3, PLAYER_HEIGHT))
    ability1_rect = ability1_surf.get_rect()
    ability1_rect.x = player1.x - PLAYER_WIDTH
    ability1_rect.y = player1.y
    ability1_surf.fill("red")
    ability1_rect_list.append"""

def ability1_movement(facing, ability1):
    if facing == "N":
        ability1.y -= ABILITY1_VELOCITY
    elif facing == "O":
        ability1.x += ABILITY1_VELOCITY
    elif facing == "S":
        ability1.y += ABILITY1_VELOCITY
    elif facing == "W":
        ability1.x -= ABILITY1_VELOCITY

def enemy():
    print("los")


def draw(player1, player1_img, ability1_list):
    #WIN.blit(BG, (0, 0))
    WIN.fill("black")
    if debug == True:
        pygame.draw.rect(WIN,"red", player1)
    WIN.blit(player1_img, (player1.x, player1.y))
    pygame.draw.rect(WIN, "red", ability1_list[0])
    #ability1.fill(pygame.Color(10,10,10))
    #WIN.blit(ability1, (player1.x, player1.y))
    pygame.display.update()

###Hier steht das Hauptprogramm
if __name__ == '__main__':
    #Hier steht der Programmcode
    WIDTH, HEIGHT = 1000, 800
    WIN = pygame.display.set_mode((WIDTH, HEIGHT))
    pygame.display.set_caption("Dungeon :)")
    PLAYER_WIDTH, PLAYER_HEIGHT = 50, 50
    PLAYER_VELOCITY = 5
    ABILITY1_VELOCITY = 10
    BG = pygame.image.load("bg.png")
    debug = False
    main()
